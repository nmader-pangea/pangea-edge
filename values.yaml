# Values for pangea-edge.

pangeaVaultTokenSecretName: null
# Secret name, +required
# This secret is used to submit usage back to pangea cloud
# Secret file must be named PANGEA_VAULT_TOKEN
# Example:
#
# apiVersion: v1
# kind: Secret
# metadata:
#   name: my-secret
# type: Opaque
# data:
#   PANGEA_VAULT_TOKEN: bXlzZWNyZXRkYXRh  # base64 encoded value

pangeaVaultServiceTokenID: null
# String, +required

internal:
  # Pangea internal use only
  devMode: false
  # Run in development mode?
  batchTimer: 900
  # How often should file descriptors be rotated in edge services?
  cronTimer: "*/15 * * * *"
  # How often should the cronjob run?

common:
  labels: {}
  logLevel: "error"
  annotations: {}
  pangeaDomain: null
  imagePullSecrets: []

serviceMonitor:
  annotations: {}
  labels:
    release: prometheus-operator

metricsVolume:
  existingClaim: null
  # Use an existing volume claim
  storageClass: null
  # Storage class for generated volume
  size: 4Gi
  # Size of storage claim
  name: "pangea-metrics-volume-claim"
  annotations: {}
  labels: {}

services:
  submission:
    image:
      repository: "pangeacyber/usage-submission"
      pullPolicy: IfNotPresent
      tag: "latest"
      imagePullSecrets: []
    schedulerName: "default-scheduler"
    annotations: {}
    labels: {}
    linkerd: false
    # Are we using linkerd?
    tests:
      annotations: {}
      labels: {}
  redact:
    enabled: true
    minReplicas: 1
    serviceAccountName: null
    # Will also be the maximum if autoscale is not set
    annotations: {}
    labels: {}
    # Log level
    podSecurityContext: {}
    # fsGroup: 2000
    securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
    nodeSelector: {}
    affinity: {}
    tolerations: []
    image:
      repository: "pangeacyber/redact"
      pullPolicy: IfNotPresent
      tag: "latest"
      imagePullSecrets: []
    resources:
      limits:
        cpu: 2000m
        memory: 4Gi
      requests:
        cpu: 2000m
        memory: 2Gi
    autoscaling:
      enabled: false
      labels: {}
      annotations: {}
      maxReplicas: 100
      targetMemoryUtilizationPercentage: 80
      targetCPUUtilizationPercentage: 80
    service:
      type: ClusterIP
      name: "redact"
      labels: {}
      annotations: {}
      ports:
        - name: http
          port: 8000
          protocol: TCP
          targetPort: 8000
    serviceMonitor:
      enabled: false
      # Enable a prometheus service monitor for this service?
      portName: "http"
      annotations: {}
      labels: {}
    tests:
      annotations: {}
      labels: {}
      serviceTokenSecretName: null
      # Secret used to make calls to redact service
      testPort: 8000
